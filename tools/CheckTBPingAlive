#!/usr/bin/perl
# CheckTBPingAlive (C) 2010-2012 Piroli YUKARINOMIYA (Open MagicVox.net)
# This program is distributed under the terms of the GNU Lesser General Public License, version 3.
# $Id$

use strict;
use warnings;
use lib qw(lib extlib ../lib ../extlib);
use MT;
use MT::Blog;
use MT::TBPing;
binmode STDOUT, ":utf8";

unless (@ARGV) {
    print "Usage: $0 <Blog ID> ...\n";
    exit;
}

my $mt = MT->new
    or die MT->errstr;
$MT::DebugMode = 0;

my $plugin = MT->component ('OMV::CheckTBPingAlive')
    or die 'CheckTBPingAlive not be found';
my $settings = $plugin->get_config_hash
    or die 'No configuration found';

my $ua = $mt->new_ua
    or die $mt->errstr;

while (my $blog_id = shift @ARGV) {
    my $blog = MT::Blog->load($blog_id);
    if (!$blog) {
        printf "A blog of id=%d not found. skipped.\n", $blog_id;
        next;
    }

    my $total_pings = MT::TBPing->count({ blog_id => $blog->id });
    printf "Blog '%s' (id=%d) has %d trackback pings.\n",
        $blog->name, $blog->id, $total_pings;

    for (my $i = 0; $i < $total_pings; $i++) {
        my $tbping = MT::TBPing->load ({ blog_id => $blog->id }, { sort => 'id', direction => 'ascend', offset => $i })
            or next;
        printf "[%s/%s] %s\n",
            ($i+1), $total_pings, $tbping->source_url;

        my $res = $ua->get ($tbping->source_url);
        if ($res && $res->is_success) {
            print "\tOK\n";
            next;
        }

        my $action = $plugin->ACTION_NONE;
        $action = $settings->{check_published} if $tbping->is_published;
        $action = $settings->{check_moderated} if $tbping->is_moderated;
        $action = $settings->{check_junked} if $tbping->is_junk;

        if ($action == $plugin->ACTION_MODERATE) {
            $tbping->moderate;
            $tbping->save;
            print "\tTurn unpublished\n";
        }
        elsif ($action == $plugin->ACTION_JUNK) {
            $tbping->junk;
            $tbping->save;
            print "\tTurn junked\n";
        }
        elsif ($action == $plugin->ACTION_DELETE) {
            $tbping->remove;
            print "\tRemoved\n";
        }
    }
}
